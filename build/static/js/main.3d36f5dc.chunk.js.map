{"version":3,"sources":["components/shared/Image/styles.js","components/shared/Image/index.jsx","components/shared/Title/styles.js","components/shared/Title/index.jsx","components/shared/Header/styles.js","components/shared/Header/index.jsx","components/shared/NavLinks/styles.js","components/shared/NavLinks/index.jsx","components/shared/Sidebar/styles.js","components/shared/Sidebar/index.jsx","components/shared/MainContent/styles.js","components/shared/MainContent/index.jsx","components/shared/TeamLive/styles.js","components/shared/TeamLive/index.jsx","components/shared/Versus/styles.js","components/shared/Versus/index.jsx","components/shared/MatchCard/styles.js","components/shared/MatchCard/index.jsx","components/shared/ReactionInfo/styles.js","components/shared/ReactionInfo/index.jsx","components/shared/CardReaction/styles.js","components/shared/CardReaction/index.jsx","components/shared/ListReactions/styles.js","components/shared/ListReactions/index.jsx","components/shared/PlayerCard/styles.js","components/shared/PlayerCard/index.jsx","components/shared/TopPlayers/styles.js","components/shared/TopPlayers/index.jsx","components/LayoutLive/styles.js","components/LayoutLive/index.jsx","routes/index.jsx","App.js","serviceWorker.js","index.js"],"names":["ImageContainer","styled","img","attrs","_ref","src","_templateObject","_ref2","width","_ref3","height","Image","react_default","a","createElement","TitleContainer","h1","styles_templateObject","size","weight","uppercase","Title","children","HeaderContainer","header","Header_styles_templateObject","Header","shared_Image","shared_Title","NavLinksContainer","div","NavLinks_styles_templateObject","NavLinks","react_router_dom","activeClassName","to","SidebarContainer","section","Sidebar_styles_templateObject","Sidebar","shared_Header","shared_NavLinks","MainContentContainer","MainContent_styles_templateObject","MainContent","TeamLiveContainer","TeamLive_styles_templateObject","TeamLive","photo","score","VersusContainer","p","Versus_styles_templateObject","Versus","MatchCardContainer","MatchCard_styles_templateObject","MatchCardGrid","_templateObject2","query","gql","MatchCard_templateObject","MatchCard","react_apollo_esm","loading","error","data","findMatch","console","log","react","shared_TeamLive","localTeamFk","localScore","shared_Versus","awayTeamFk","awayScore","ReactionInfoContainer","ReactionInfo_styles_templateObject","reaction","ReactionInfo","name","position","team","CardReactionContainer","CardReaction_styles_templateObject","CardReaction","shared_ReactionInfo","ListReactionsContainer","ListReactions_styles_templateObject","REACTION_SUBSCRIPTION","ListReactions_templateObject","ListReactions","subscription","reactionCreated","shared_CardReaction","TopPlayerContainer","PlayerCard_styles_templateObject","PlayerCard","firstName","surname","TopPlayersContainer","TopPlayers_styles_templateObject","TopPlayers_templateObject","TopPlayers","getReactions","map","participant","shared_PlayerCard","LayoutLiveContainer","LayoutLive_styles_templateObject","Live","shared_MainContent","shared_MatchCard","shared_ListReactions","shared_TopPlayers","Routes","react_router","exact","strict","path","component","App","basename","shared_Sidebar","routes","Boolean","window","location","hostname","match","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","terminatingLink","split","_getMainDefinition","getMainDefinition","kind","operation","link","ApolloLink","from","cache","InMemoryCache","client","ApolloClient","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d36f5dc.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ImageContainer = styled.img.attrs(({ src }) => ({ src }))`\n  width: ${({ width }) => width};\n  height: ${({ height }) => height};\n`;","import React from 'react';\n\n/* STYLES */\nimport { ImageContainer } from './styles';\n\nconst Image = ({ src, width, height }) => {\n  return <ImageContainer\n    src={src}\n    width={width}\n    height={height}/>\n};\n\nexport default Image;\n","import styled from 'styled-components';\n\nexport const TitleContainer = styled.h1`\n  font-family: Nunito, sans-serif;\n  font-size: ${({ size }) => size ? size : '36px'};\n  font-weight: ${({ weight }) => weight ? weight : '400'};\n  text-transform: ${({ uppercase }) => uppercase ? 'uppercase' : 'none' };\n  color: white;\n  margin: 0;\n`;\n","import React from 'react';\n\n/* STYLES */\nimport { TitleContainer } from './styles';\n\nconst Title = ({ size, children, weight, uppercase }) => {\n  return <TitleContainer\n    size={size}\n    weight={weight}\n    uppercase={uppercase}>\n    { children }\n  </TitleContainer>\n};\n\nexport default Title;\n","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n\n  & > img {\n    margin-right: 20px;\n  }\n`;\n","import React from 'react';\n\n/* COMPONENTS */\nimport Image from '../Image';\nimport Title from '../Title';\n\n/* STYLES */\nimport { HeaderContainer } from './styles';\n\nconst Header = () => {\n  return <HeaderContainer>\n    <Image\n      src=\"https://firebasestorage.googleapis.com/v0/b/token-sport.appspot.com/o/leagues%2FToken%20Sport%20FC?alt=media&token=32ffbf32-208f-4431-8b9c-65feb982a55c\"\n      width=\"55px\"\n      height=\"50px\"\n    />\n    <Title size=\"20px\" weight=\"400\">Dashboard</Title>\n  </HeaderContainer>\n};\n\nexport default Header;","import styled from 'styled-components';\n\nexport const NavLinksContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > a {\n    font-family: Nunito, sans-serif;\n    font-size: 14px;\n    font-weight: 700;\n    color: white;\n    text-decoration: none;\n    text-transform: uppercase;\n    margin-bottom: 10px;\n    padding: 10px 0 10px 20px;\n  }\n`;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n/* STYLES */\nimport { NavLinksContainer } from './styles';\n\nconst NavLinks = () => {\n  return <NavLinksContainer>\n    <NavLink activeClassName=\"selected\" to=\"/home\">Home</NavLink>\n    <NavLink activeClassName=\"selected\" to=\"/live\">En Vivo</NavLink>\n    <NavLink activeClassName=\"selected\" to=\"/matches\">Partidos</NavLink>\n    <NavLink activeClassName=\"selected\" to=\"/tournaments\">Torneos</NavLink>\n  </NavLinksContainer>\n};\n\nexport default NavLinks;\n","import styled from 'styled-components';\n\nexport const SidebarContainer = styled.section`\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: 80px 150px auto;\n  grid-gap: 100px 0;\n  position: relative;\n  left: 0;\n  top: 0;\n  width: calc(20% - 50px);\n  height: calc(100vh - 80px);\n  background-color: #16192a;\n  padding: 40px 50px;\n`;","import React from 'react';\n\n/* COMPONENTS */\nimport Header from '../Header';\nimport NavLinks from '../NavLinks';\n\n/* STYLES */\nimport { SidebarContainer } from './styles';\n\nconst Sidebar = () => {\n  return <SidebarContainer>\n    <Header />\n    <NavLinks />\n  </SidebarContainer>\n};\n\nexport default Sidebar;\n","import styled from 'styled-components';\n\nexport const MainContentContainer = styled.section`\n  width: calc(80% - 100px);\n  height: calc(100vh - 100px);\n  padding: 50px 50px;\n`;","import React from 'react';\n\n/* STYLES */\nimport { MainContentContainer } from './styles';\n\nconst MainContent = ({ children }) => {\n  return <MainContentContainer> { children } </MainContentContainer>\n};\n\nexport default MainContent;\n","import styled from 'styled-components';\n\nexport const TeamLiveContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: end;\n  justify-self: end;\n\n  & > p {\n    font-family: Nunito, sans-serif;\n    font-weight: 700;\n    font-size: 20px;\n    color: white;\n    margin: 10px 0 0 0;\n  }\n`;\n","import React from 'react';\n\n/* COMPONENTS */\nimport Image from '../Image';\n\n/* STYLES */\nimport { TeamLiveContainer } from './styles';\n\nconst TeamLive = ({ photo, score, width, height }) => {\n  return <TeamLiveContainer>\n    <Image src={photo} width={width} height={height}/>\n    <p>{ score }</p>\n  </TeamLiveContainer>\n};\n\nexport default TeamLive;","import styled from 'styled-components';\n\nexport const VersusContainer = styled.p`\n  font-family: Nunito, sans-serif;\n  font-weight: 700;\n  font-size: 28px;\n  color: white;\n  text-align: center;\n  align-items: center;\n`;","import React from 'react';\n\n/* STYLES */\nimport { VersusContainer } from './styles';\n\nconst Versus = () => {\n  return <VersusContainer>VS</VersusContainer>\n};\n\nexport default Versus;","import styled from 'styled-components';\n\nexport const MatchCardContainer = styled.div`\n  grid-area: 2 / 1 / 3 / 2;\n  width: 350px;\n  height: 220px;\n  border-radius: 15px;\n  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .2);\n  border-top: 15px solid rgb(0, 252, 134);\n  padding: 0 10px;\n`;\n\nexport const MatchCardGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 20px 160px;\n  align-items: center;\n  padding-top: 20px;\n  \n  & > div:last-child {\n    justify-self: start;\n  }\n\n  & > p:first-child {\n    grid-area: 1 / 1 / 2 / 4;\n    justify-self: center;\n    font-family: Nunito, sans-serif;\n    font-weight: 300;\n    font-size: 14px;\n    color: white;\n  }\n`;\n","import React, { Fragment } from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\n/* COMPONENTS */\nimport TeamLive from '../TeamLive';\nimport Versus from '../Versus';\n\n/* STYLES */\nimport { MatchCardContainer, MatchCardGrid } from './styles';\n\nconst query = gql`\n  {\n    findMatch(uuid: \"6fcab4bc-de3b-4c37-a763-d666e5ca4f36\") {\n      localScore\n      awayScore\n      localTeamFk{\n        photo\n      }\n      awayTeamFk{\n        photo\n      }\n  }\n  }\n`;\n\nconst MatchCard = () => {\n  return <MatchCardContainer>\n    <MatchCardGrid>\n      <Query query={query}>\n        {\n          ({ loading, error, data }) => {\n            if (loading) return <p>Loading...</p>\n            if (error) return <p>Error :(</p>\n\n            const { findMatch } = data;\n            console.log(findMatch)\n            return (\n              <Fragment>\n                <p>Estadio Token Sport</p>\n                <TeamLive\n                  photo={findMatch.localTeamFk.photo}\n                  width=\"80px\"\n                  height=\"80px\"\n                  score={findMatch.localScore}\n                />\n                <Versus />\n                <TeamLive\n                  photo={findMatch.awayTeamFk.photo}\n                  width=\"65px\"\n                  height=\"80px\"\n                  score={findMatch.awayScore}\n                />\n              </Fragment>\n            );\n          }\n        }\n      </Query>\n    </MatchCardGrid>\n  </MatchCardContainer>\n};\n\nexport default MatchCard;\n","import styled from 'styled-components';\n\nexport const ReactionInfoContainer = styled.div`\n  & > p {\n    font-family: Nunito, sans-serif;\n    font-size: 16px;\n    color: white;\n    margin: 0 0 5px 0;\n  }\n\n  & > p:nth-child(2) {\n    font-size: 14px;\n  }\n\n  & > p:last-child {\n    font-weight: 700;\n    color: ${({ reaction }) => (reaction === 'CLAP') ? '#00e5ff' : '#fe5a38'};\n    margin: 20px 0 0 0;\n  }\n`","import React from 'react';\n\n/* STYLES */\nimport { ReactionInfoContainer } from './styles';\n\nconst ReactionInfo = ({ reaction }) => {\n  return <ReactionInfoContainer reaction={reaction.reaction}>\n    <p>{ reaction.name } - { reaction.position }</p>\n    <p>{ reaction.team }</p>\n    <p>{ reaction.reaction }</p>\n  </ReactionInfoContainer>\n};\n\nexport default ReactionInfo;\n","import styled from 'styled-components';\n\nexport const CardReactionContainer = styled.div`\n  border-radius: 10px;\n  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .2);\n  margin-left: 20px;\n  padding: 15px 20px;\n  margin-bottom: 30px;\n  border-right: ${({ reaction }) => (reaction === 'CLAP') ? '40px solid #00e5ff' : '40px solid #fe5a38'};\n`;\n","import React from 'react';\n\n/* COMPONENTS */\nimport ReactionInfo from '../ReactionInfo';\n\n/* STYLES */\nimport { CardReactionContainer } from './styles';\n\nconst CardReaction = ({ reaction }) => {\n  return <CardReactionContainer reaction={reaction.reaction}>\n    <ReactionInfo reaction={reaction}/>\n  </CardReactionContainer>\n};\n\nexport default CardReaction;\n","import styled from 'styled-components';\n\nexport const ListReactionsContainer = styled.div`\n  grid-area: 2 / 2 / 3 / 3;\n  padding-left: 20px;\n  padding-right: 40px;\n  border-left: 2px solid rgba(173, 173, 173, .05);\n\n  & > div {\n    padding: 10px;\n    height: 200px;\n    overflow-y: scroll;\n  }\n\n  & > div > p {\n    font-family: Nunito, sans-serif;\n    color: white;\n  }\n\n  & > h4 {\n    font-family: Nunito, sans-serif;\n    font-weight: 400;\n    color: white;\n    margin: 10px 0 20px 20px;\n  }\n`;\n","import React from 'react';\nimport { Subscription } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\n/* COMPONENTS */\nimport CardReaction from '../CardReaction';\n\n/* STYLES */\nimport { ListReactionsContainer } from './styles';\n\n/* SUBSCRIPTION */\nconst REACTION_SUBSCRIPTION = gql`\n  subscription onReactionCreated{\n    reactionCreated{\n      name\n      position\n      team\n      reaction\n    }\n  }\n`;\n\nconst ListReactions = ({ reaction }) => {\n  return <ListReactionsContainer reaction={reaction.reaction}>\n    <h4>Reacciones</h4>\n    <div>\n      <Subscription subscription={REACTION_SUBSCRIPTION}>\n        {\n          ({ data, loading }) => {\n            {/* const { reactionCreated } = data; */}\n            if (loading) return <p>No hay Reacciones aun :(</p>\n            if (data) {console.log(data.reactionCreated.name)}\n\n            return(\n              <CardReaction reaction={data.reactionCreated}/>\n          )}\n        }\n      </Subscription>\n    </div>\n  </ListReactionsContainer>\n};\n\nexport default ListReactions;","import styled from 'styled-components';\n\nexport const TopPlayerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 40px;\n\n  & > div {\n    width: 100px;\n    border-radius: 5px;\n    box-shadow: 0 0 5px 2px rgba(0, 0, 0, .2);\n    padding: 5px 20px;\n  }\n\n  & > div > p {\n    font-family: Nunito, sans-serif;\n    font-size: 14px;\n    color: white;\n    text-align: center;\n    margin: 0;\n  }\n`;\n","import React from 'react';\n\nimport Image from '../Image';\n\n/* STYLES */\nimport { TopPlayerContainer } from './styles';\n\nconst PlayerCard = ({ photo, firstName, surname }) => {\n  return <TopPlayerContainer>\n    <Image src={photo} width=\"80px\" height=\"80px\"/>\n    <div>\n      <p>{ firstName } { surname }</p>\n    </div>\n  </TopPlayerContainer>\n};\n\nexport default PlayerCard;\n","import styled from 'styled-components';\n\nexport const TopPlayersContainer = styled.div`\n  grid-area: 3 / 1 / 3 / 4;\n\n  & > h3 {\n    font-family: Nunito, sans-serif;\n    font-size: 16px;\n    font-weight: 700;\n    text-transform: uppercase;\n    color: white;\n    margin: 0 0 20px 0;\n  }\n\n  & > div:last-child {\n    display: flex;\n  }\n`;","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\n/* COMPONENTS */\nimport PlayerCard from '../PlayerCard';\n\n/* STYLES */\nimport { TopPlayersContainer } from './styles';\n\nconst query = gql`\n  {\n    getReactions(query: { matchUuid: \"6fcab4bc-de3b-4c37-a763-d666e5ca4f36\" }) {\n      participant {\n        firstName\n        surname\n        photo\n        participantRole{\n          position\n        }\n      }\n    }\n  }\n`;\n\nconst TopPlayers = () => {\n  return (\n    <TopPlayersContainer>\n      <h3>JUGADORES DESTACADOS</h3>\n      <div>\n        <Query query={query}>\n          {\n            ({ loading, error, data }) => {\n              if (loading) return <p>Loading...</p>\n              if (error) return <p>Error :(</p>\n              return data.getReactions.map(({ participant }) => (\n                <PlayerCard\n                  photo={participant.photo}\n                  firstName={participant.firstName}\n                  surname={participant.surname}\n                />\n              ));\n            }\n          }\n        </Query>\n      </div>\n    </TopPlayersContainer>\n  );\n};\n\nexport default TopPlayers;\n","import styled from 'styled-components';\n\nexport const LayoutLiveContainer = styled.div`\n  display: grid;\n  height: calc(100vh - 80px);\n  grid-template-columns: 50% 50%;\n  grid-template-rows: 70px 1fr 1fr;\n  grid-gap: 50px 0;\n\n  & > div:first-child {\n    grid-area: 1 / 1 / 2 / 3;\n    align-self: center;\n  }\n\n  & > div:nth-child(2) {\n    justify-self: center;\n    align-self: center;\n  }\n\n  & > div > p {\n    font-family: Nunito, sans-serif;\n    font-weight: 300;\n    font-size: 14px;\n    color: white;\n    margin: 5px 0 0 0;\n  }\n`;","import React from 'react';\n\n/* COMPONENTS */\nimport MainContent from '../shared/MainContent';\nimport Title from '../shared/Title';\nimport MatchCard from '../shared/MatchCard';\nimport ListReaction from '../shared/ListReactions';\nimport TopPlayers from '../shared/TopPlayers';\n\n/* STYLES */\nimport { LayoutLiveContainer } from './styles';\n\nconst reaction = {\n  name: 'Juan Quintero',\n  position: 'MCO',\n  team: 'River Plate',\n  reaction: 'CLAP'\n}\n\nconst Live = () => {\n  return <MainContent>\n    <LayoutLiveContainer>\n      <div>\n        <Title size=\"20px\" weight=\"700\" uppercase>Partido en Vivo</Title>\n        <p>Torneo: Liga Token Sport</p>\n      </div>\n      <MatchCard />\n      <ListReaction reaction={ reaction }/>\n      <TopPlayers />\n    </LayoutLiveContainer>\n  </MainContent>\n};\n\nexport default Live;","import React from 'react';\nimport { Switch, Route } from 'react-router';\n\n/* COMPONENTS */\nimport Live from '../components/LayoutLive';\n\nconst Routes = () => {\n  return <Switch>\n    <Route exact strict path=\"/live\" component={Live} />\n  </Switch>\n};\n\nexport default Routes;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n/* COMPONENTS */\nimport Sidebar from './components/shared/Sidebar/index';\n\n/* ROUTES */\nimport Routes from './routes';\n\n\nconst App = () => {\n  return (\n    <BrowserRouter basename=\"/\">\n      <Sidebar />\n      <Routes />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/* APOLLO CLIENT */\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { ApolloLink, split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\n\n/* CLIENT INSTANCE */\n// const client = new ApolloClient({\n//   uri: 'http://134.209.119.214:4000/graphql'\n// });\n\nconst httpLink = new HttpLink({\n  uri: 'http://134.209.119.214:4000/graphql'\n});\n\nconst wsLink = new WebSocketLink({\n  uri: 'ws://134.209.119.214:4000/graphql',\n  options: {\n    reconnect: true\n  }\n});\n\nconst terminatingLink = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return (\n      kind === 'OperationDefinition' && operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\nconst link = ApolloLink.from([terminatingLink]);\n\nconst cache = new InMemoryCache();\n  \nconst client = new ApolloClient({\n    link,\n    cache,\n});\n\nReactDOM.render(<ApolloProvider client={client}>\n                  <App />\n                </ApolloProvider>,\n                document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}